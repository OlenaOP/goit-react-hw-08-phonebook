{"version":3,"file":"static/js/739.69e88674.chunk.js","mappings":"4MACA,EAAgC,mCAAhC,EAA6E,6B,UCCvEA,EAAkB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,EAEhBC,GAAiBC,EAAAA,EAAAA,IAC5BJ,GACA,SAAAE,GAAQ,OAAIA,EAASA,SAASG,KAAtB,IAUGC,IAR0BF,EAAAA,EAAAA,IACrCJ,GACA,SAAAE,GAAQ,OAAIA,EAASA,SAASK,SAAtB,KAEyBH,EAAAA,EAAAA,IACjCJ,GACA,SAAAE,GAAQ,OAAIA,EAASA,SAASM,KAAtB,KAE0BJ,EAAAA,EAAAA,IAClCJ,GACA,SAAAE,GAAQ,OAAIA,EAASO,MAAb,K,SCZGC,EAAc,WACzB,IAAMR,GAAWS,EAAAA,EAAAA,IAAYR,GACvBS,GAAWC,EAAAA,EAAAA,MAiBjB,OACE,kBAAMC,SAhBa,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAOF,EAAKG,SAASD,KAAKE,MAEhC,GADyBnB,EAASoB,MAAK,SAAAC,GAAO,OAAIA,EAAQJ,OAASA,CAArB,IAE5CK,MAAM,GAAD,OAAIL,EAAJ,gCADP,CAKA,IAAMM,EAASR,EAAKG,SAASM,YAAYL,MACzCT,GAASe,EAAAA,EAAAA,IAAgB,CAAER,KAAAA,EAAMM,OAAAA,KACjCR,EAAKW,OAJJ,CAKF,EAGC,WACE,6BAAO,QAEL,kBACEC,KAAK,OACLV,KAAK,OACLW,UAAWC,EACXC,UAAQ,QAKZ,6BAAO,gBAEL,kBACEF,UAAWC,EACXF,KAAK,MACLV,KAAK,cACLa,UAAQ,QAGZ,mBAAQF,UAAWC,EAAaF,KAAK,SAArC,SAA8C,kBAKnD,ECnDD,EAA4B,0BCIfI,EAAS,WACpB,IAAMxB,GAASE,EAAAA,EAAAA,IAAYL,GACrBM,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACE,6BAAO,yBAEL,kBACEiB,UAAWC,EACXF,KAAK,OACLV,KAAK,SACLE,MAAOZ,EACPyB,SAAU,SAAAnB,GAAG,OAAIH,GAASuB,EAAAA,EAAAA,IAAUpB,EAAIqB,OAAOf,OAAlC,QAKtB,E,UCtBD,EAAuB,mBAAvB,EAAoD,sBAApD,EAAiF,mBAAjF,EAA6G,qBCMhGgB,EAAO,WAClB,IAAMC,GAAc3B,EAAAA,EAAAA,IAAYR,GAC1BM,GAASE,EAAAA,EAAAA,IAAYL,GACrBM,GAAWC,EAAAA,EAAAA,MAQXX,EANa,SAACqC,EAAarC,GAC/B,OAAOA,EAASO,QAAO,SAAA+B,GACrB,OAAOA,EAAKrB,KAAKsB,cAAcC,SAASH,EAAYE,cACrD,GACF,CAEgBE,CAAWlC,EAAQ6B,GAMpC,OAJAM,EAAAA,EAAAA,YAAU,WACRhC,GAASiC,EAAAA,EAAAA,MACV,GAAE,CAACjC,KAGF,eAAIkB,UAAWC,EAAf,SACG7B,EAAS4C,KAAI,SAAAvB,GACZ,OACE,yBACE,iBAAKO,UAAWC,EAAhB,WACE,eAAGD,UAAWC,EAAd,UACGR,EAAQJ,KAAK,KAAGI,EAAQE,WAE3B,mBACEI,KAAK,SACLC,UAAWC,EACXgB,QAAS,kBAAMnC,GAASoC,EAAAA,EAAAA,IAAmBzB,EAAQ0B,IAA1C,EAHX,SAIC,eATI1B,EAAQ0B,GAepB,KAGN,EC5BD,EAbqB,WACnB,OACE,4BACE,wBAAI,kCACJ,SAACvC,EAAD,KACA,wBAAI,kBACJ,SAACuB,EAAD,KACA,wBAAI,iBACH,SAACI,EAAD,MAGN,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts.selector.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/List/List.module.css?2bcc","components/List/List.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"formNameInput\":\"ContactForm_formNameInput__0Jzyv\",\"formBtn\":\"ContactForm_formBtn__qZGY3\"};","import { createSelector } from '@reduxjs/toolkit';\n\nconst selectPhonebook = state => state.contacts;\n\nexport const selectContacts = createSelector(\n  selectPhonebook,\n  contacts => contacts.contacts.items\n);\nexport const selectContactsIsLoading = createSelector(\n  selectPhonebook,\n  contacts => contacts.contacts.isLoading\n);\nexport const selectContactsError = createSelector(\n  selectPhonebook,\n  contacts => contacts.contacts.error\n);\nexport const selectContactsFilter = createSelector(\n  selectPhonebook,\n  contacts => contacts.filter\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'redux/contacts.reducer';\n\nimport css from './ContactForm.module.css';\nimport { selectContacts } from 'redux/contacts.selector';\n\nexport const ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const hasNameDublicate = contacts.some(contact => contact.name === name);\n    if (hasNameDublicate) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n\n    const number = form.elements.phoneNumber.value;\n    dispatch(addContactThunk({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          className={css.formNameInput}\n          required\n          // value={this.state.name}\n          // onChange={(e) => this.setState({ name: e.target.value })}\n        />\n      </label>\n      <label>\n        Phone number\n        <input\n          className={css.formNameInput}\n          type=\"tel\"\n          name=\"phoneNumber\"\n          required\n        />\n      </label>\n      <button className={css.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formInput\":\"Filter_formInput__XNLZn\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts.reducer';\nimport { selectContactsFilter } from 'redux/contacts.selector';\n\nexport const Filter = () => {\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <label>\n        Find contacts by name\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={evt => dispatch(setFilter(evt.target.value))}\n        />\n      </label>\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"List_list__AK7hC\",\"wrapper\":\"List_wrapper__HBHEP\",\"text\":\"List_text__+-7ZF\",\"button\":\"List_button__7efWq\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactThunk, fetchContactsThunk } from 'redux/contacts.reducer';\nimport { selectContacts, selectContactsFilter } from 'redux/contacts.selector';\n\nimport css from './List.module.css';\n\nexport const List = () => {\n  const allContacts = useSelector(selectContacts);\n  const filter = useSelector(selectContactsFilter);\n  const dispatch = useDispatch();\n\n  const dataSearch = (filterQuery, contacts) => {\n    return contacts.filter(user => {\n      return user.name.toLowerCase().includes(filterQuery.toLowerCase());\n    });\n  };\n\n  const contacts = dataSearch(filter, allContacts);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(contact => {\n        return (\n          <li key={contact.id}>\n            <div className={css.wrapper}>\n              <p className={css.text}>\n                {contact.name}: {contact.number}\n              </p>\n              <button\n                type=\"button\"\n                className={css.button}\n                onClick={() => dispatch(deleteContactThunk(contact.id))}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { List } from 'components/List/List';\nimport React from 'react';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <h1>Add new contact to Phonebook</h1>\n      <ContactForm />\n      <h2>Find contact</h2>\n      <Filter />\n      <h2>My contacts</h2>\n      {<List />}\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectPhonebook","state","contacts","selectContacts","createSelector","items","selectContactsFilter","isLoading","error","filter","ContactForm","useSelector","dispatch","useDispatch","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","some","contact","alert","number","phoneNumber","addContactThunk","reset","type","className","css","required","Filter","onChange","setFilter","target","List","allContacts","filterQuery","user","toLowerCase","includes","dataSearch","useEffect","fetchContactsThunk","map","onClick","deleteContactThunk","id"],"sourceRoot":""}